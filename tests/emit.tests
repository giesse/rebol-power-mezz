REBOL [
    Type: Module
    Title: "Tests for the EMIT function"
    Author: "Gabriele Santilli"
    Imports: [%dialects/emit.r]
]

[true] ; compatibility with old test file
[
    tag: macro [name style contents] [
        #"<" name if style [{ style="} style #"^""] #">" emit contents "</" name #">"
    ]
    div: macro [contents /options style] [
        tag 'div style contents
    ]
    p: macro [contents] [
        tag 'p none contents
    ]
    span: macro [contents] [
        tag 'span none contents
    ]
    emit "" [
        div [
            p [
                span "In a span"
                " and out of it..."
            ]
            p "...and so on..."
            div/options [
                p "This can be used in many ways..."
            ] [
                style: "background-color: red; color: yellow;"
            ]
        ]
    ]
]
[
    emit "" [
        "You are running REBOL/" system/product " version " system/version ".^/"
        "Those values are available in " 'system/product " and " 'system/version ".^/"
        "3 * 2 = " (3 * 2)
    ]
]
[
    emit [] [
        1 2 3
        emit [4 (2 + 3) 6]
        emit/only [7 (4 + 4) 9]
        if true [10 11 12]
        if false [12 11 10]
        either true [13 (10 + 4) 15] [no no no]
        either false [hopefully no] [16 (8 * 2 + 1) 18]
    ]
]
[
    tag: macro/custom [name contents attr-name value here] [
        set name word!
        (emit output [#"<" name])
        any [
            set attr-name set-word!
            here: (
                set [value here] do/next here
                emit output [
                    #" " (form attr-name) {="} encode-text value 'html #"^""
                ]
            ) :here
        ]
        set contents block! (
            emit output [#">" emit contents "</" name #">"]
        )
    ]
    drop-down*: macro/custom [name value] [
        some [
            [set name set-word! | (name: none)]
            set value string!
            (emit output [
                either name [
                    tag option value: form name [
                        value
                    ]
                ] [
                    tag option [value]
                ]
            ])
        ]
    ]
    drop-down: macro [
        values
    ] [
        tag select [
            apply 'drop-down* values
        ]
    ]
    emit "" [
        drop-down [
            "First"
            "Second"
            third: "Third"
            "Fourth"
        ]
    ]
]
