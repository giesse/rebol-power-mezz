block! [parsing-config config-is-one-module listening got-connection greeting got-message handling-message still-handshake hello allowed sending-handshake-response got-message handling-message still-handshake key got-key 256 decrypted 20 key-ok role server encrypted-ver-number 256 sending-handshake-response got-message handling-message still-handshake verify got-ver-number 256 decrypted-ver-number 20 all-good got-message handling-message list modules got-message handling-message list %mezz/text-encoding.r got-message handling-message call %mezz/text-encoding.r 
    encode-text {["Is a < b?" html #[none] #[none]]} module-ok function-ok arguments-ok call-ok got-message handling-message call %mezz/text-encoding.r encode-text "[#[none] #[none] #[none] #[none]]" module-ok function-ok arguments-ok error-thrown got-message handling-message quit handle-message returned true quitting
] string! {public-key: #{
D9282B23F517B276F9ACF9C8C8AE09A5743ADF3448CD25B0195F30478B46412A
95484BABA7BE850C024320E3B2FCF26A67DAB18C1FDBF555B3381553B76C1408
94B803275234AA4EC23583B02A6ED625FC9EB7A9DBD3AE62D7CF8AE1FEBF0970
7A49097F19E131690E670D45B41128CFC5DDB7680938BB39D3B36ED8D348D6D8
73FF6406C6359B540A8EF2A9FE6AC02254382D3BF37A256BB87476F1405D08EA
2F161864435F83C6E02B754FA66BB5105F2E30ECB661AE0E11E62B1B9B9FEB02
AFEC62FB95F19826AD12B890ADDBA9E703427CFD680CC9ABAC0116E0C6F44660
4AE5181144133D5122FBEDE2029D3540AF585970754292C03EE2CC0C90BE20EF
}
private-key: make object! [
    n: #{
D9282B23F517B276F9ACF9C8C8AE09A5743ADF3448CD25B0195F30478B46412A
95484BABA7BE850C024320E3B2FCF26A67DAB18C1FDBF555B3381553B76C1408
94B803275234AA4EC23583B02A6ED625FC9EB7A9DBD3AE62D7CF8AE1FEBF0970
7A49097F19E131690E670D45B41128CFC5DDB7680938BB39D3B36ED8D348D6D8
73FF6406C6359B540A8EF2A9FE6AC02254382D3BF37A256BB87476F1405D08EA
2F161864435F83C6E02B754FA66BB5105F2E30ECB661AE0E11E62B1B9B9FEB02
AFEC62FB95F19826AD12B890ADDBA9E703427CFD680CC9ABAC0116E0C6F44660
4AE5181144133D5122FBEDE2029D3540AF585970754292C03EE2CC0C90BE20EF
}
    e: #{03}
    d: #{
90C57217F8BA76F9FBC8A685DB1EB118F8273F783088C3CABB94CADA5CD980C7
0E3032726FD458B2AC2CC097CCA8A19C453C765D6A92A38E777AB8E27A480D5B
0DD0021A36CDC6DF2C23AD201C49E41953147A713D37C9973A8A5C96A9D4B0F5
A6DB5BAA1140CB9B5EEF5E2E780B708A83E924F00625D2268D2249E5E2308F39
BC90497DD2A59C563CEE8B4DBDE876E9D7345E5C6D7A8715357EAD817A56B268
C8302B4201802533B876D407FEBA275FAD0F3DA56FEC794639E9A26F0467F3C8
5A8CEA53B7B78BE88365BCF0C6BAA9ACB802BA9DFDE6556079E0C274F7B72B86
72CC59D9A7A92CE84F315E469DFCB15CFB3BE8AD1B965BD8B1995A759F10EADB
}
    p: #{
FFF807CBFA24316E5E74B128AC1F9B5D770035E42E8FEB941A2C0EA3229CFAD2
78AF47400591EE6A1FBF9B999DB2E290A42C6F73DFCE9F500A0E8219BA4AE1D3
8A2D5B80B06A343C4F4C5E0903DFBF0FD098351930DAAFA1EE2D16E71494989F
BB44E858C07BF8EF87ADABCA58E7B86997926E7742174CBC9F823FF10CE20925
}
    q: #{
D92EEDFE1018FF6450B4708CB56E72661A6969CD20B26F37CE0A640BE63E027A
8A1E90413B8D5D8F2BB99BAA0AA19770376AE500AEB058D4B0F9355B5AB91B82
9DEBA7FD51F4120D98ADBF1E7FE3EC541EA62FF73A5899F90702DC4A3ECCEC76
E36DA8F208198105248434ADBCBA72CB9EEC0DF589C9BC3E94FA846B1542B783
}
    dmp1: #{
AAA55A87FC1820F43EF8761B1D6A6793A4AACE981F0A9D0D66C809C2171351E1
A5CA2F8003B69EF16A7FBD1113CC970B181D9FA295346A355C09AC1126DC968D
06C8E7AB2046CD7D8A32E95B57EA7F5FE06578BB75E71FC14973649A0DB865BF
D22DF03B2AFD509FAFC91D31909A7AF10FB6F44F8164DDD315017FF60896B0C3
}
    dmq1: #{
90C9F3FEB565FF9835CDA05DCE49A19966F0F1336B219F7A895C42B2997EAC51
B169B580D25E3E5F727BBD1C071664F57A474355C9CAE5E320A623923C7B67AC
6947C5538BF80C091073D4BEFFED4838146ECAA4D19066A604AC92DC29DDF2F9
ECF3C5F6B01100AE1858231E7DD1A1DD149D5EA3B1312829B8A702F20E2C7A57
}
    iqmp: #{
69B742A9FE65C8183BECA4A0A07F33AE94E7444BF39ED5AA061BF40871579B77
02A9FD5644D79C97485A828260D42176F46CD0CD463ADEF352CE55CC670CBAD5
9D9FAF1DB10EB1ABC56A155A63D071F88FF91B0F5C603F4B42B54A12B0E15595
755625369105B351C8821922C04F84A0AEB3DF38E127F9B1451DEC30E3C52858
}
    n-mont-ri: none
    n-mont-rr: none
    n-mont-n: none
    n-mont-ni: none
    n-mont-n0: none
    n-mont-flags: none
    p-mont-ri: none
    p-mont-rr: none
    p-mont-n: none
    p-mont-ni: none
    p-mont-n0: none
    p-mont-flags: none
    q-mont-ri: none
    q-mont-rr: none
    q-mont-n: none
    q-mont-ni: none
    q-mont-n0: none
    q-mont-flags: none
]
allowed-peers: [#{
B48AF957F2848A3EF8B902700DF99FB14F5C91CACCE2AFA9DE3BDF64236FDF94
F604D4325A81C6AD04BDF17465594A3B97E5A89E8FA38B736C7BE79C8A7079AC
0A15D6759EDD654D5F470D75CA02C252D09029AF3D6362665A88A3C965259B58
DD7E623C8D0F351098FB3D64CFFAE5CA6FA0A218E5B07C4F52A87E9FF065CDEA
1A721620B3AA8E81E7995615E8EF5126A7837FB9452E85851D463DE3CCF9E16E
1331C58FBA8DCD07F468A219E8D2852AA5B3ADA8127D7BC8CFD69078007BF11E
9A18E0CE208D174C32068316BBEFB42003B767309C9A945972F9F294080E9929
CCE6852D5FAD33537CA41E8D93E470C433DF6E122AD8090E9CBFF76182CB6841
}]
logging: [only [print-at-all-costs] to output]
} block! [hello allowed key got-key 256 decrypted 20 key-ok role client encrypted-ver-number 256 verify got-ver-number 256 decrypted-ver-number 20 all-good] string! {%mezz/text-encoding.r [
    Title: "Text encoding and decoding functions" 
    Author: "Gabriele Santilli" 
    Version: 1.3.0 
    Purpose: {
        Defines the encode-text and decode-text functions, that can encode UTF-8 text
        into other encodings or charsets, and decode other encodings or charsets to
        UTF-8 text.
    } 
    Exports: [
        encode-text 
        decode-text
    ] 
    Globals: none
] %mezz/imap.r [
    Title: "IMAP access functions" 
    Author: "Gabriele Santilli" 
    Version: 1.5.2 
    Purpose: {
        This module exports a number of functions to access mail on a IMAP server.
    } 
    Exports: [
        open-mail-db 
        valid-mail-db? 
        refresh-mail-db 
        close-mail-db 
        list-mail-folders 
        get-message-counts 
        list-mail-messages 
        move-mail-message 
        copy-mail-message 
        compact-mail-folder 
        create-mail-folder 
        empty-mail-folder 
        delete-mail-folder 
        move-mail-folder 
        rename-mail-folder 
        create-mail-message 
        get-mail-message 
        change-message-flags 
        search-mail-messages
    ] 
    Globals: none
]} string! {encode-text [
    {Encode UTF-8 text to the specified encoding or charset} [catch] 
    text [any-string!] 
    encoding [word!] "Name of the target encoding - see docs" 
    /to output [any-string!] "Output to this buffer"
] decode-text [
    {Decode text from the specified encoding or charset to UTF-8} [catch] 
    text [any-string!] 
    encoding [word!] "Name of TEXT's encoding or charset" 
    /to output [any-string!] "Output to this buffer"
]} string! "Is a &lt; b?" string! "Is a < b?" error! 
{** Script Error: encode-text expected text argument of type: any-string
** Near: call-remote-function port %mezz/text-encoding.r [encode-text none none none none]
} error! 
{** Hardball Error: Peer says: Invalid argument list for that function
** Near: call-remote-function port %mezz/text-encoding.r [encode-text]
} error! 
{** Hardball Error: Peer says: The module does not export that function
** Near: call-remote-function port %mezz/text-encoding.r [a-function]
} block! [REBOL [
        Type: Module 
        Imports: [%schemes/hardball.r] 
        Exports: [encode-text decode-text]
    ] 
    _config: make-hardball-configuration [] 
    _port: open-hardball-connection _config _server-url: tcp://localhost:1025 encode-text: func [
        {Encode UTF-8 text to the specified encoding or charset} [catch] 
        text [#[datatype! any-string!]] 
        encoding [#[datatype! word!]] "Name of the target encoding - see docs" 
        /to output [#[datatype! any-string!]] "Output to this buffer"
    ] [
        unless attempt [copy _port] [
            attempt [close _port] 
            _port: open-hardball-connection _config _server-url
        ] 
        call-remote-function _port %mezz/text-encoding.r [encode-text :text :encoding :to :output]
    ] decode-text: func [
        {Decode text from the specified encoding or charset to UTF-8} [catch] 
        text [#[datatype! any-string!]] 
        encoding [#[datatype! word!]] "Name of TEXT's encoding or charset" 
        /to output [#[datatype! any-string!]] "Output to this buffer"
    ] [
        unless attempt [copy _port] [
            attempt [close _port] 
            _port: open-hardball-connection _config _server-url
        ] 
        call-remote-function _port %mezz/text-encoding.r [decode-text :text :encoding :to :output]
    ]
] string! {&#31169;&#12399;&#26085;&#26412;&#35486;&#12434;&#21193;&#24375;&#12375;&#12390;&#12356;&#12414;&#12377;&#12290;} string! "私は日本語を勉強しています。" logic! #[true]