UTF-8 encoding and decoding functions

    Type: Module
    Purpose: {
        Defines the encode-utf8 and decode-utf8 functions.
    }
    Author: "Gabriele Santilli"
    File: %utf8.r
    Version: 1.1.0
    Exports: [
        encode-utf8
        decode-utf8
    ]

===Introduction

Introduction to be written.

===Overview

    -main-:
    encode-utf8: func [
        "Encode a code point in UTF-8 format"
        char [integer!] "Unicode code point"
    ] [
        -encode-utf8-
    ]
    decode-utf8: func [
        "Decode a UTF-8 sequence into a code point"
        char [any-string!] "Valid UTF-8 sequence representing a single character"
    ] [
        -decode-utf8-
    ]

===Encode the code point |char| in UTF-8 format
    
    -encode-utf8-:
    if char <= 127 [
        return as-string to binary! reduce [char]
    ]
    if char <= 2047 [
        return as-string to binary! reduce [
            char and 1984 / 64 + 192
            char and 63 + 128
        ]
    ]
    if char <= 65535 [
        return as-string to binary! reduce [
            char and 61440 / 4096 + 224
            char and 4032 / 64 + 128
            char and 63 + 128
        ]
    ]
    if char > 2097151 [return ""]
    as-string to binary! reduce [
        char and 1835008 / 262144 + 240
        char and 258048 / 4096 + 128
        char and 4032 / 64 + 128
        char and 63 + 128
    ]

===Decode the UTF-8 sequence in |char| into a code point

    -decode-utf8-:
    unless binary? char [char: as-binary char]
    do pick [
        [   ; 1 (ASCII)
            char/1
        ]
        [   ; 2
            char/1 and 31 * 64 + (char/2 and 63)
        ]
        [   ; 3
            char/1 and 15 * 4096 + (char/2 and 63 * 64) + (char/3 and 63)
        ]
        [   ; 4
            char/1 and 7 * 262144 + (char/2 and 63 * 4096) + (char/3 and 63 * 64) + (char/4 and 63)
        ]
    ] length? char
