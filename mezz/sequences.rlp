"Random" 160-bit number sequences

    Type: Module
    Purpose: {
        Provides functions to create sequences of 160-bit "random" numbers,
        starting from a 160-bit seed number.
    }
    Author: "Gabriele Santilli"
    License: {
        =================================
        A message from Qtask about this source code:

        We have selected the MIT license (as of 2010-Jan-1) because
        it is the closest “standard” license to our intent.  If we had our way,
        we would declare this source as public domain, with absolutely no
        strings attached, not even the string that says you have to have
        strings.  We want to help people, so please feel free to contact us
        at API@Qtask.com if you have questions.
         

        (you only need to include the standard license text below in your
        homage to this source code)
        =================================

        Copyright 2009 Qtask, Inc.

        Permission is hereby granted, free of charge, to any person obtaining
        a copy of this software and associated documentation files
        (the "Software"), to deal in the Software without restriction, including
        without limitation the rights to use, copy, modify, merge, publish,
        distribute, sublicense, and/or sell copies of the Software, and to
        permit persons to whom the Software is furnished to do so, subject
        to the following conditions:

        The above copyright notice and this permission notice shall be included
        in all copies or substantial portions of the Software.

        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
        THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
        OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
        ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
        OTHER DEALINGS IN THE SOFTWARE.
    }
    File: %sequences.r
    Version: 1.0.0
    Exports: [
        make-sequence "Create a sequence"
        next-number   "Return the next number from the sequence"
    ]

===Introduction

This program implements a "Pseudo-Random Number Generator". All generated numbers
are 160 bits long; it also allows for having more than one "sequence" going
on at the same time (eg. with different seeds).

===Overview

We have only two functions, |make-sequence| which initializes a sequence object
given a seed, and |next-number| that returns the next number in the sequence
given a sequence object.

    -main-:
    make-sequence: func [
        "Create a random number sequence"
        seed [binary!]
    ] [
        -make-sequence-
    ]
    next-number: func [
        "Return the next number from the sequence"
        sequence [object!]
    ] [
        -next-number-
    ]

===Implementation

The implementation is trivial and is based on keyed SHA-1 (HMAC).

---Initialize a sequence object

    -make-sequence-:
    context [
        cur: #{0000000000000000000000000000000000000000}
        key: seed
    ]

---Generate the next number in the sequence

    -next-number-:
    sequence/cur: checksum/secure/key sequence/cur sequence/key
