"Tee" port scheme for REBOL

    Purpose: {
        Implements tee://, a port scheme that allows sending a stream to two destinations
        at the same time.
    }
    Author: "Gabriele Santilli"
    File: %tee.r
    License: "(C) 2008 Qtask, Inc. All rights reserved."
    Version: 1.0.0

===Introduction

===Overview

    -main-:
    net-utils/net-install 'tee make Root-Protocol [
        init: func [port spec] [
            -init-tee-
        ]
        open: func [port] [
            -open-tee-
        ]
        close: func [port] [
            -close-tee-
        ]
        write: func [port data] [
            -write-tee-
        ]
        read: func [port data /local -read-locals-] [
            -read-tee-
        ]
        update: func [port] [
            -update-tee-
        ]
    ] 80

===Implementation

---Initialize the tee port |port| from |spec|

    -init-tee-:
    if url? spec [
        ; assume that user wants to write to a file
        spec: to file! skip spec 4
        if find/match spec %// [remove spec]
        port/sub-port: spec
    ]
    port/url: spec
    if none? port/sub-port [
        net-error "You must specify a sub port to write to"
    ]

---Open the tee port |port|

    -open-tee-:
    port/locals: context [
        buffer: make binary! 1024
        close?: no
    ]
    if file? port/sub-port [
        port/locals/close?: yes
        port/sub-port: system/words/open/binary/direct/write/new port/sub-port
    ]
    port/state/flags: port/state/flags or system/standard/port-flags/direct

---Close the tee port |port|

    -close-tee-:
    if port/locals/close? [
        system/words/close port/sub-port
        ; allow reopening it easily
        port/sub-port: join port/sub-port/path port/sub-port/target
    ]
    port/locals: none

---Write |data| into the buffer and to |port/sub-port|

    -write-tee-:
    insert/part tail port/locals/buffer data port/state/num
    ; it will obviously not work for pass-thru ports
    write-io port/sub-port data port/state/num

---Put the contents of the buffer into |data| and clear the buffer

    -read-tee-:
    len: min length? port/locals/buffer port/state/num
    insert/part tail data port/locals/buffer len
    remove/part port/locals/buffer len
    len

+++|read|'s locals

    -read-locals-:
    len

---Update |port/sub-port|

    -update-tee-:
    attempt [system/words/update port/sub-port]
